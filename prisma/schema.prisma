generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model member {
  id               String        @id(map: "member_pk")
  xp               Float         @default(0) @db.Real
  level            Int           @default(0)
  activityLog      activityLog[]
}

model mute {
  id      String   @id(map: "sqlite_autoindex_mutes_1")
  endDate DateTime @map("end_date") @db.Timestamptz(6)

  @@map("mutes")
}

model guild {
  id                    String @id
  successReaction       String @default("✅") @map("success_reaction")
  failureReaction       String @default("❎") @map("failure_reaction")
  prefix                String @default("!")
  questionReaction      String @default("❔") @map("question_reaction")
  devPrefix             String @default("?") @map("dev_prefix")
  commandsChannel       String @default("465225835042045953") @map("commands_channel")
  logsChannel           String @default("674385697549058090") @map("logs_channel")
  muteRole              String @default("584713555320766464") @map("mute_role")
  errorsChannel         String @default("937449246330851378") @map("errors_channel")
  alertsChannel         String @default("716992046467907677") @map("alerts_channel")
  modActionsChannel     String @default("941061402431483904") @map("mod_actions_channel")

  @@map("settings")
}

model stats {
  id    String @id(map: "sqlite_autoindex_stats_1")
  warns Int    @default(0)
  mutes Int    @default(0)
  bans  Int    @default(0)
}

model warn {
  reason   String?
  memberId String   @map("member_id")
  modId    String   @map("mod_id")
  points   Decimal  @default(50) @db.Decimal
  date     DateTime @default(now()) @db.Timestamptz(6)
  id       Int      @id @default(autoincrement())

  @@map("warn2")
}

model levelDrop {
  id        Int       @id(map: "level_drop_pk") @default(autoincrement())
  level     Int
  role      String?

  @@map("level_drop")
}

model xpBlock {
  member String   @id(map: "xp_block_pk")
  expiry DateTime @db.Timestamptz(6)

  @@map("xp_block")
}

model activityLog {
  id       Int          @id(map: "activity_log_pk") @default(autoincrement())
  memberId String       @map("member")
  date     DateTime     @default(now()) @db.Timestamptz(6)
  type     ActivityType
  member   member       @relation(fields: [memberId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "activity_log_member_id_fk")

  @@map("activity_log")
}

enum ActivityType {
  text
  voice
  warn
  mute
  ban
  alertResponse @map("alert_response")
  clear
  transfer
  unmute
  delwarn

  @@map("activity_type")
}
